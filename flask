import sqlite3

from flask import Flask
from flask import g
from flask import render_template
from flask import request
from flask import Response
from flask import flash


app = Flask(__name__)


def get_db():
    if 'db' not in g:
        g.db = sqlite3.connect(
            "your-database-file.db",
            detect_types=sqlite3.PARSE_DECLTYPES
        )
        g.db.row_factory = sqlite3.Row

    return g.db

@app.route('/employee', methods=['POST', 'PUT', 'DELETE'])
@app.route('/employee/<name>', methods=['GET'])
def employee(name = None):
    """
    データベースへの接続を行う
    """
    db = get_db()
    curs = db.cursor()
    
    curs.execute(
        'CREATE TABLE IF NOT EXISTS persons('
        'id INTEGER PRIMARY KEY AUTOINCREMENT , name STRING)'
    )
    db.commit()
    
    name = request.values.get('name', name)
    
    """
        GETメソッドの場合はデータベースから値を取得する
    """
   
    if request.method == 'GET':
        db = get_db()
        cors = db.cursor()
        cors.execute(
            f'SELECT * FROM persons WHERE name = "{name,}"'
        )
        person = cors.fetchone()
        if not person:
            return "No", 404
        user_id, name = person
        return f'{user_id}:{name}', 200
    """
        POSTメソッドの場合はデータベースに値を追加する
    """

    if request.method == 'POST':
        cors.execute(f'INSERT INTO persons(name) values("{name}")')
        db.commit()
        return f'created {name}' , 201

    
    """
    PUTメソッドの場合はデータベースの値を更新する
    """
       
    if request.method == 'PUT':
        new_name = request.form['new_name']
        cors.execute(f'UPDATE persons set name = "{new_name}" '
                     f'WHERE name = "{name}"')
        db.commit()
        return f'updated {name}: {new_name}!', 200
        
        
    """
    DELETEメソッドの場合はデータベースの値を削除する
    """
    
    if request.method == 'DELETE':
        cors.execute(
            f'DELETE FROM persons WHERE name = "{name}"'
            )
        db.commit()
        return f'deleted {name}', 200
                       
    curs.close()
    db.close()


def main():
    app.debug = True
    app.run()
    # app.run(host='127.0.0.1', post=5000)
    
if __name__ == '__main__':
    main()
    
    